name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-and-push:
    if: github.repository == 'eremeye/chatdify'
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_NAME: ${{ secrets.CUSTOM_IMAGE_NAME || github.repository }}
      GHCR_IMAGE_NAME: ghcr.io/${{ github.repository }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Sanitize branch name
        if: github.event_name == 'pull_request'
        run: echo "BRANCH_TAG=$(echo '${{ github.head_ref }}' | sed 's/\//-/g')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ github.event_name == 'release' && format('{0}:latest', env.DOCKER_IMAGE_NAME) || '' }}
            ${{ github.event_name == 'push' && format('{0}:develop', env.DOCKER_IMAGE_NAME) || '' }}
            ${{ github.event_name == 'release' && format('{0}:{1}', env.DOCKER_IMAGE_NAME, github.ref_name) || '' }}
            ${{ github.event_name == 'pull_request' && format('{0}:{1}', env.DOCKER_IMAGE_NAME, env.BRANCH_TAG) || '' }}
            ${{ github.event_name == 'workflow_dispatch' && format('{0}:develop', env.DOCKER_IMAGE_NAME) || '' }}
            ${{ github.event_name == 'release' && format('{0}:latest', env.GHCR_IMAGE_NAME) || '' }}
            ${{ github.event_name == 'push' && format('{0}:develop', env.GHCR_IMAGE_NAME) || '' }}
            ${{ github.event_name == 'release' && format('{0}:{1}', env.GHCR_IMAGE_NAME, github.ref_name) || '' }}
            ${{ github.event_name == 'workflow_dispatch' && format('{0}:develop', env.GHCR_IMAGE_NAME) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Trigger deployment webhooks
        if: success()
        env:
          DEV_WEBHOOK_URL: ${{ secrets.DEV_DEPLOY_WEBHOOK }}
        run: |
          if [ -n "$DEV_WEBHOOK_URL" ]; then
            curl -X POST "$DEV_WEBHOOK_URL"
          else
            echo "DEV_DEPLOY_WEBHOOK not set, skipping webhook call"
          fi
